package red.steady.swt.widgets;

import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;

import red.steady.richWidgets.RichSliderColorScheme;
import red.steady.richWidgets.utils.SwtUtils;

public class VolumeControlButtonPanel extends SpForm {

	private String[] volumeControlNames;
	private ImageCanvas soundOnImageCanvas;
	private ImageCanvas soundOffImageCanvas;
	private VolumeControlPanel volumeControlPanel;
	private SpStackedForm mainSpStackedForm;
	private Color backgroundColor;

	public VolumeControlButtonPanel(Composite parent, String[] volumeControlNames) {
		super(parent, SWT.NULL, 3, 3);

		this.volumeControlNames = volumeControlNames;

		backgroundColor = SwtUtils.getSystemColor(getDisplay(), SWT.COLOR_BLACK);
		setBackground(backgroundColor);

		createControls();
	}

	private void createControls() {
		mainSpStackedForm = new SpStackedForm(this);

		soundOnImageCanvas = new ImageCanvas(mainSpStackedForm,
				createImageFromClasspath("com/redmindset/images/autoGenerated/sound_on-white-20x20.png"));

		soundOnImageCanvas.addListener(SWT.MouseDown, new Listener() {
			@Override
			public void handleEvent(Event event) {
				volumeControlPanel.toggleVisibility();
			}
		});
		soundOnImageCanvas.setBackground(backgroundColor);

		soundOffImageCanvas = new ImageCanvas(mainSpStackedForm,
				createImageFromClasspath("com/redmindset/images/autoGenerated/sound_off-white-20x20.png"));

		soundOffImageCanvas.addListener(SWT.MouseDown, new Listener() {
			@Override
			public void handleEvent(Event event) {
				volumeControlPanel.toggleVisibility();
			}
		});
		soundOffImageCanvas.setBackground(backgroundColor);

		mainSpStackedForm.setTopControl(soundOnImageCanvas);

		RichSliderColorScheme nebulaSliderColorScheme//
				= RichSliderColorScheme.builder()//
						.control(VolumeControlButtonPanel.this)//
						.selectorColor(SwtUtils.getAndDisposeColor(VolumeControlButtonPanel.this, 255, 0, 0))//
						.build();

		volumeControlPanel //
				= new VolumeControlPanel(getShell(), VolumeControlButtonPanel.this, volumeControlNames,
						nebulaSliderColorScheme);
	}

	public void soundOn() {
		mainSpStackedForm.setTopControl(soundOnImageCanvas);
	}

	public void soundOff() {
		mainSpStackedForm.setTopControl(soundOffImageCanvas);
	}
}
